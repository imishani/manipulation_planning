# This file includes families of successors. Families could be "long_primitives," "short_primitives," etc.
# Details.
# <motion_primitive_family_name>:
#   <motion_primitive1_name>:
#     mprim_sequence: # List of delta degrees for each joint
#       - [ 0, 0, 0, 0, 0, 0, 0 ] # For now, always start with 0. This is the reference point.
#       - [ 7, 0, 0, 0, 0, 0, 0 ] # The delta degrees for each dimension. This is from the reference point.
#       - [ 14, 0, 0, 0, 0, 0, 0 ] # More delta degrees can be added. This is from the reference point as well.
#     mprim_sequence_transition_costs: [ 1, 1, 0 ] # Entry i is the time it takes to move from state i to state i+1. The last one is always zero.
#     generate_negative: true # If true, the negative of the delta degrees will be added as well.
#   <motion_primitive2_name>:
#     ...

long_primitives:
  joint0:
    mprim_sequence:
      - [ 0, 0, 0, 0, 0, 0, 0 ]
      - [ 7, 0, 0, 0, 0, 0, 0 ]
    mprim_sequence_transition_costs: [ 1000, 0 ]
    generate_negative: true
  joint1:
    mprim_sequence:
      - [ 0, 0, 0, 0, 0, 0, 0 ]
      - [ 0, 7, 0, 0, 0, 0, 0 ]
    mprim_sequence_transition_costs: [ 1000, 0 ]
    generate_negative: true
  joint2:
    mprim_sequence:
      - [ 0, 0, 0, 0, 0, 0, 0 ]
      - [ 0, 0, 7, 0, 0, 0, 0 ]
    mprim_sequence_transition_costs: [ 1000, 0 ]
    generate_negative: true
  joint3:
    mprim_sequence:
      - [ 0, 0, 0, 0, 0, 0, 0 ]
      - [ 0, 0, 0, 7, 0, 0, 0 ]
    mprim_sequence_transition_costs: [ 1000, 0 ]
    generate_negative: true
  joint4:
    mprim_sequence:
      - [ 0, 0, 0, 0, 0, 0, 0 ]
      - [ 0, 0, 0, 0, 7, 0, 0 ]
    mprim_sequence_transition_costs: [ 1000, 0 ]
    generate_negative: true
#  wait: # Optional wait action. Normally not used in single-agent planning / non-dynamic environments.
#    mprim_sequence:
#      - [ 0, 0, 0, 0, 0, 0, 0 ]
#      - [ 0, 0, 0, 0, 0, 0, 0 ]
#    mprim_sequence_transition_costs: [ 1000, 0 ]
#    generate_negative: false

short_primitives:
  joint0:
    mprim_sequence:
      - [ 0, 0, 0, 0, 0, 0, 0 ]
      - [ 4, 0, 0, 0, 0, 0, 0 ]
    mprim_sequence_transition_costs: [ 1000, 0 ]
    generate_negative: true
  joint1:
    mprim_sequence:
      - [ 0, 0, 0, 0, 0, 0, 0 ]
      - [ 0, 4, 0, 0, 0, 0, 0 ]
    mprim_sequence_transition_costs: [ 1000, 0 ]
    generate_negative: true
  joint2:
    mprim_sequence:
      - [ 0, 0, 0, 0, 0, 0, 0 ]
      - [ 0, 0, 4, 0, 0, 0, 0 ]
    mprim_sequence_transition_costs: [ 1000, 0 ]
    generate_negative: true
  joint3:
    mprim_sequence:
      - [ 0, 0, 0, 0, 0, 0, 0 ]
      - [ 0, 0, 0, 4, 0, 0, 0 ]
    mprim_sequence_transition_costs: [ 1000, 0 ]
    generate_negative: true
  joint4:
    mprim_sequence:
      - [ 0, 0, 0, 0, 0, 0, 0 ]
      - [ 0, 0, 0, 0, 4, 0, 0 ]
    mprim_sequence_transition_costs: [ 1000, 0 ]
    generate_negative: true
  joint5:
    mprim_sequence:
      - [ 0, 0, 0, 0, 0, 0, 0 ]
      - [ 0, 0, 0, 0, 0, 4, 0 ]
    mprim_sequence_transition_costs: [ 1000, 0 ]
    generate_negative: true
  joint6:
    mprim_sequence:
      - [ 0, 0, 0, 0, 0, 0, 0 ]
      - [ 0, 0, 0, 0, 0, 0, 4 ]
    mprim_sequence_transition_costs: [ 1000, 0 ]
    generate_negative: true